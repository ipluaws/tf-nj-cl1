name: build-push-deploy

on:
  workflow_dispatch:
  
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          IMAGE_TAG="latest"
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/notejam:$IMAGE_TAG .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/notejam:$IMAGE_TAG

      - name: Deploy to ECS
        run: |
          CLUSTER_NAME="${{ secrets.ECS_CLUSTER_NAME }}"
          SERVICE_NAME="notejam-service"
          IMAGE_TAG="latest"

          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME \
            --force-new-deployment \
            --desired-count 2

      - name: Initialize and apply Terraform
        run: |
          cd deploy
          terraform init
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/notejam:latest"
          terraform apply -auto-approve -var "container_image=$IMAGE_URI"
